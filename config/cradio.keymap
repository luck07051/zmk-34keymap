// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer name
#define DEF 0
#define NUM 1
#define SYM 2
#define NAV 3
#define FUN 4
#define SYS 5
#define OSU 6

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LGUI k1  &ht LCTRL k2  &ht LSHFT k3  &ht LALT k4
#define HRMR(k1,k2,k3,k4) &ht RALT k1  &ht RSHFT k2  &ht RCTRL k3  &ht RGUI k4

// Shorthand for alignments
#define BTSEL(index) &bt BT_SEL index
#define BTCLR        &bt BT_CLR
#define OUTUSB       &out OUT_USB
#define OUTBLE       &out OUT_BLE

// Combo macro
#define COMBO(name, keycode, pos, layer, time) name { \
        bindings = <keycode>; \
        key-positions = <pos>; \
        layers = <layer>; \
        timeout-ms = <time>; \
    };

&sk {
    release-after-ms = <1000>;
};

&sl {
    release-after-ms = <1000>;
};

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <220>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE>;
};


/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        COMBO(caps_word,        &caps_word,       1 2 3,  DEF NUM SYM,  50)
        COMBO(to_system_layout, &to SYS,          6 7 8,  DEF NUM SYM,  50)

        // Tab Esc   BS
        COMBO(tab,            &kp TAB,            1 2,    DEF NUM SYM,  50)
        COMBO(escape,         &kp ESCAPE,         2 3,    DEF NUM SYM,  50)
        COMBO(backspace,      &kp BACKSPACE,      6 7,    DEF NUM SYM,  50)
        // " .   , '
        COMBO(double_quotes,  &kp DOUBLE_QUOTES,  11 12,  DEF NUM SYM,  50)
        COMBO(dot,            &kp DOT,            12 13,  DEF NUM SYM,  50)
        COMBO(comma,          &kp COMMA,          16 17,  DEF NUM SYM,  50)
        COMBO(single_quote,   &kp SINGLE_QUOTE,   17 18,  DEF NUM SYM,  50)
        // & \   / |
        COMBO(ampersand,      &kp AMPERSAND,      21 22,  DEF NUM SYM,  50)
        COMBO(backslash,      &kp BACKSLASH,      22 23,  DEF NUM SYM,  50)
        COMBO(slash,          &kp SLASH,          26 27,  DEF NUM SYM,  50)
        COMBO(pipe,           &kp PIPE,           27 28,  DEF NUM SYM,  50)


        COMBO(osu2defualt,    &to DEF,            30 33,  OSU,      50)
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
            &kp Q      &kp W      &kp F      &kp P      &kp B          &kp J      &kp L      &kp U      &kp Y      &kp MINUS
            HRML(A,    R,         S,         T)         &kp G          &kp M      HRMR(N,    E,         I,         O)
            &kp Z      &kp X      &kp C      &kp D      &kp V          &kp K      &kp H      &kp LPAR   &kp RPAR   &kp UNDER
                                             &sl SYM    &lt NAV SPACE  &kp ENTER  &sl NUM
            >;
        };

        number_layer {
            bindings = <
            &trans     &kp ASTRK  &kp EQUAL  &kp SLASH  &trans         &kp J      &kp PLUS   &kp MINUS  &kp PRCNT  &trans
            HRML(N7,   N8,        N9,        N0)        &trans         &trans     HRMR(N1,   N2,        N3,        N4)
            &kp LS(G)  &kp LT     &kp GT     &kp N6     &kp SEMI       &kp K      &kp N5     &kp LPAR   &kp RPAR   &kp COMMA
                                             &trans     &trans         &trans     &sl FUN
            >;
        };

        symbol_layer {
            bindings = <
            &kp AT     &kp QMARK  &kp HASH   &kp EXCL   &kp GRAVE      &kp DQT    &kp CARET  &kp DLLR   &kp ASTRK  &kp MINUS
            HRML(AMPS, EQUAL,     LBKT,      RBKT)      &kp PIPE       &kp SQT    HRMR(LBRC, RBRC,      SEMI,      COLON)
            &kp BSLH   &trans     &trans     &kp TILDE  &kp PRCNT      &trans     &kp PLUS   &kp COMMA  &kp DOT    &kp SLASH
                                             &trans     &trans         &trans     &trans
            >;
        };

        navigation_layer {
            bindings = <
            &trans     &trans     &caps_word &key_repeat &trans        &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &kp BSPC
            HRML(ESC,  TAB,       DEL,       BSPC)      &kp ENTER      &kp LARW   &kp DARW   &kp UARW   &kp RARW   &kp ENTER
            &trans     &trans     &trans     &kp INS    &trans         &trans     &kp PSCRN  &trans     &trans     &trans
                                             &trans     &trans         &trans     &trans
            >;
        };

        function_layer {
            bindings = <
            &trans     &trans     OUTBLE     OUTUSB     BTCLR          BTSEL(0)   BTSEL(1)   BTSEL(2)   BTSEL(3)   BTSEL(4)
            HRML(F7,   F8,        F9,        F10)       &kp F12        &kp F11    HRMR(F1,   F2,        F3,        F4)
            &trans     &trans     &trans     &kp F6     &trans         &trans     &kp F5     &trans     &trans     &to OSU
                                             &trans     &trans         &trans     &sl NUM
            >;
        };

        system_layer {
            bindings = <
            &trans     &trans     &trans     &trans     &trans         &trans     &trans     &trans     &trans     &trans
            &trans     &trans     &trans     &trans     &trans         &trans     &trans     &trans     &trans     &trans
            &trans     &trans     &trans     &trans     &trans         &trans     &trans     &trans     &trans     &trans
                                             &to DEF    &trans         &trans     &trans
            >;
        };

        osu_layer {
            bindings = <
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
            &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L      &kp SQT
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp LARW   &kp DARW   &kp UARW   &kp RARW
                                             &kp TAB    &kp ESC        &kp ENTER  &kp SPACE
            >;
        };
    };
};
