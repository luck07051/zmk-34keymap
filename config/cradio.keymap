// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer name
#define DEF 0
#define NUM 1
#define NAV 2
#define FUN 3
#define OSU 4

// Home row mods macro
#define HRML(k1,k2,k3) &mt LGUI k1  &mt LCTRL k2  &mt LALT k3
#define HRMR(k1,k2,k3) &mt RALT k1  &mt RCTRL k2  &mt RGUI k3

// Hold tap symbols
#define TLR(k1,k2,k3,k4,k5) &kp       k1   &ht LBKT  k2   &ht RBKT k3   &ht HASH  k4   &ht AT    k5
#define HLR(k1,k2,k3,k4,k5) HRML(     k1,            k2,           k3)  &ht EQUAL k4   &ht PIPE  k5
#define BLR(k1,k2,k3,k4,k5) &ht BSLH  k1   &ht LT    k2   &ht GT   k3   &ht GRAVE k4   &ht AMPS  k5

#define TRR(k1,k2,k3,k4,k5) &ht PRCNT k1   &ht PLUS  k2   &ht LBRC k3   &ht RBRC  k4   &kp       k5
#define HRR(k1,k2,k3,k4,k5) &ht EXCL  k1   &ht DLLR  k2   HRMR(    k3,            k4,            k5)
#define BRR(k1,k2,k3,k4,k5) &ht QMARK k1   &ht CARET k2   &ht LPAR k3   &ht RPAR  k4   &ht FSLH  k5

// Shorthand for alignments
#define BTSEL(index) &bt BT_SEL index
#define BTCLR        &bt BT_CLR
#define OUTUSB       &out OUT_USB
#define OUTBLE       &out OUT_BLE

// Combo macro
#define COMBO(name, keycode, pos, layer, time) name { \
        bindings = <keycode>; \
        key-positions = <pos>; \
        layers = <layer>; \
        timeout-ms = <time>; \
    };


&sk {
    release-after-ms = <1000>;
};

&sl {
    release-after-ms = <1000>;
};

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <220>;
};

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE>;
};


/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <170>;
            bindings = <&kp>, <&kp>;
        };

        tmt: thumb_mod_tap {
            label = "thumb_mod_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <220>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // Top row combos: Q TAB  ; :
        COMBO(kpq,            &kp Q,              1 2,    DEF,          50)
        COMBO(tab,            &kp TAB,            2 3,    DEF NUM NAV,  50)
        COMBO(semicolon,      &kp SEMICOLON,      6 7,    DEF NUM NAV,  50)
        COMBO(colon,          &kp COLON,          7 8,    DEF NUM NAV,  50)

        // Home row combos: ' ESC  BS "
        COMBO(single_quote,   &kp SINGLE_QUOTE,   11 12,  DEF NUM NAV,  50)
        COMBO(escape,         &kp ESCAPE,         12 13,  DEF NUM NAV,  50)
        COMBO(backspace,      &kp BACKSPACE,      16 17,  DEF NUM NAV,  50)
        COMBO(double_quotes,  &kp DOUBLE_QUOTES,  17 18,  DEF NUM NAV,  50)

        // Lower row combos: * |  ( )
        COMBO(astrk,          &kp ASTRK,          21 22,  DEF NUM NAV,  50)
        COMBO(underscore,     &kp UNDERSCORE,     22 23,  DEF NUM NAV,  50)
        COMBO(lpar,           &kp LPAR,           26 27,  DEF NUM NAV,  50)
        COMBO(rpar,           &kp RPAR,           27 28,  DEF NUM NAV,  50)


        COMBO(osu2defualt,    &to DEF,            30 33,  OSU,      50)
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
            TLR(Q,     W,         F,         P,         B)             TRR(J,     L,         U,         Y,         COLON)
            HLR(A,     R,         S,         T,         G)             HRR(M,     N,         E,         I,         O)
            BLR(Z,     X,         C,         D,         V)             BRR(K,     H,         COMMA,     DOT,       MINUS)
                                      &key_repeat  &lt NAV SPACE       &tmt RSHFT ENTER  &sl NUM
            >;
        };

        number_layer {
            bindings = <
            TLR(Q,     FSLH,      ASTRK,     EQUAL,     TILDE)         TRR(J,     PLUS,      MINUS,     CARET,     COLON)
            HLR(N7,    N8,        N9,        N0,        PRCNT)         HRR(EXCL,  N1,        N2,        N3,        N4)
            BLR(Z,     X,         C,         N6,        V)             BRR(K,     N5,        COMMA,     DOT,       MINUS)
                                             &trans     &trans         &trans     &sl FUN
            >;
        };

        navigation_layer {
            bindings = <
            &trans     &trans     &trans     &key_repeat &trans        &trans     &trans     &trans     &trans     &trans
            &sk LGUI   &sk LCTRL  &sk LALT   &sk LSHFT  &trans         &kp LARW   &kp DARW   &kp UARW   &kp RARW   &trans
            &trans     &trans     &trans     &trans     &trans         &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &trans
                                             &trans     &none          &trans     &trans
            >;
        };

        function_layer {
            bindings = <
            //&trans     &trans     OUTBLE     OUTUSB     BTCLR          BTSEL(0)   BTSEL(1)   BTSEL(2)   BTSEL(3)   BTSEL(4)
            &trans     &kp F7     &kp F8     &kp F9     &trans         &trans     &trans     &trans     &trans     &trans
            &kp F10    &kp F4     &kp F5     &kp F6     &trans         &trans     &sk RALT   &sk RGUI   &sk RCTRL  &sk RSHFT
            &to OSU    &kp F1     &kp F2     &kp F3     &trans         &trans     &trans     &trans     &trans     &trans
                                             &trans     &trans         &trans     &trans
            >;
        };

        osu_layer {
            bindings = <
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
            &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L      &kp SQT
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp LARW   &kp DARW   &kp UARW   &kp RARW
                                             &kp TAB    &kp ESC        &kp ENTER  &kp SPACE
            >;
        };
    };
};
